'''Adjacency Matrix'''

class Graph(object):	 # Initialize the matrix
    def __init__(self, size): 
        self.adjMatrix = [] 
        for i in range(size):
            self.adjMatrix.append([0 for i in range(size)]) 
            self.size = size

    # Add edges
    def add_edge(self, v1, v2): 
        if v1 == v2:
            print("Same vertex %d and %d" % (v1, v2)) 
            self.adjMatrix[v1][v2] = 1
            self.adjMatrix[v2][v1] = 1

    # Remove edges
    def remove_edge(self, v1, v2):
        if self.adjMatrix[v1][v2] == 0:
            print("No edge between %d and %d" % (v1, v2)) 
            return
            self.adjMatrix[v1][v2] = 0
            self.adjMatrix[v2][v1] = 0

    def len (self): 
        return self.size

    # Print the matrix
    def print_matrix(self):
        for row in self.adjMatrix: 
            for val in row:
                print('{:4}'.format(val),end=" "), print("\n")
    
def main():
        g = Graph(4) 
        g.add_edge(0, 2)
        g.add_edge(0, 3)
        g.add_edge(1, 0)
        g.add_edge(1, 2) 
        g.add_edge(1,1) 
        g.add_edge(2,3) 
        g.add_edge(3,0) 
        g.add_edge(3,2) 
        g.remove_edge (0,1)

        g.print_matrix()
        print("The size of graph is: ",g. len ())



if __name__	== '__main__': 
    main()
